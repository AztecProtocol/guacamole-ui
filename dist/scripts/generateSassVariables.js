"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = generateSassVariables;
exports.generateSassVariablesSync = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _config = _interopRequireDefault(require("../config"));

var styleConstants = _interopRequireWildcard(require("../config/styleConstants"));

var _jsToSass = _interopRequireDefault(require("./utils/jsToSass"));

var _deepMerge = _interopRequireDefault(require("./utils/deepMerge"));

var _log = require("./utils/log");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var generateContent = function generateContent(_ref) {
  var theme = _ref.theme;

  var cssConfig = _objectSpread({}, (0, _deepMerge.default)(_config.default, theme), styleConstants);

  var variables = (0, _jsToSass.default)(cssConfig);
  var processRoot = process.cwd();
  var thisFilename;

  var root = _path.default.resolve(__dirname, '../../');

  var relativeRoot = _path.default.relative(root, processRoot);

  if (relativeRoot.startsWith('../')) {
    thisFilename = '@aztec/guacamole-ui';
  } else {
    thisFilename = _path.default.relative(processRoot, __filename);
  }

  return "// auto-generated by ".concat(thisFilename, "\n").concat(variables, "\n  ");
};

var getFileDest = function getFileDest(_ref2) {
  var _ref2$output = _ref2.output;
  _ref2$output = _ref2$output === void 0 ? {} : _ref2$output;
  var _ref2$output$path = _ref2$output.path,
      outputPath = _ref2$output$path === void 0 ? _path.default.resolve(__dirname, '../../src/styles') : _ref2$output$path,
      _ref2$output$variable = _ref2$output.variablesFilename,
      variablesFilename = _ref2$output$variable === void 0 ? 'variables.scss' : _ref2$output$variable;
  return _path.default.join(outputPath, variablesFilename);
};

var generateSassVariablesSync = function generateSassVariablesSync() {
  var confifg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var content = generateContent(confifg);
  var fileDest = getFileDest(confifg);

  try {
    _fs.default.writeFileSync(fileDest, content);

    (0, _log.successLog)('Sass variables file created', "path: ".concat(fileDest));
  } catch (error) {
    (0, _log.errorLog)(error);
    process.exit(1);
  }
};

exports.generateSassVariablesSync = generateSassVariablesSync;

function generateSassVariables() {
  return _generateSassVariables.apply(this, arguments);
}

function _generateSassVariables() {
  _generateSassVariables = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee() {
    var confifg,
        content,
        fileDest,
        _args = arguments;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            confifg = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
            content = generateContent(confifg);
            fileDest = getFileDest(confifg);
            _context.next = 5;
            return _fs.default.writeFile(fileDest, content, function (error) {
              if (error) {
                (0, _log.errorLog)(error);
                process.exit(1);
              } else {
                (0, _log.successLog)('Sass variables file created', "  path: ".concat(fileDest));
              }
            });

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _generateSassVariables.apply(this, arguments);
}