@import '../../../styles/typography';

$icon-item-size-map: (
  'xxs': 'xxs',
  'xs': 'xs',
  's': 's',
  'm': 'm',
  'l': 'l',
  'xl': 'xl',
  'xxl': 'xl',
);

$avatar-item-text-size-map: (
  'xxs': 's',
  'xs': 's',
  's': 'm',
  'm': 'l',
  'l': 'xl',
  'xl': 'xxl',
  'xxl': 'xxl',
);

.list-item {
  position: relative;
  display: flex;
  line-height: 0;
}

.icon {
  line-height: 0;
}

.content {
  word-break: break-word;
}

.nowrap {
  align-items: center;

  .content {
    white-space: nowrap;
  }
}

.valign-center {
  align-items: center;
}

.wrap {
  align-items: flex-start;

  .icon {
    position: absolute;
  }
}

.showEllipsis {
  .content {
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

@each $key, $icon-size-key in $icon-item-size-map {
  .size-#{$key} {
    $content-line-height: get-line-height($key);
    $icon-size: map-get($icon-size-map, $icon-size-key);

    .icon {
      & + .content {
        margin-left: $icon-size * 0.5;
      }
    }

    &.wrap {
      .icon {
        top: ($content-line-height - $icon-size) / 2;

        & + .content {
          margin-left: $icon-size * 1.5;
        }
      }
    }
  }
}

@each $key, $text-size-key in $avatar-item-text-size-map {
  .size-#{$key} {
    $content-line-height: get-line-height($text-size-key);
    $avatar-size: map-get($avatar-sizes-map, $key);

    .avatar {
      & + .content {
        $ratio: 1 / 3;
        @if $key == 'xxs' or $key == 'xs' or $key == 'm' {
          $ratio: 1 / 2;
        }
        padding-left: $avatar-size * $ratio;
      }
    }

    &.wrap {
      &.no-description {
        .avatar {
          & + .content {
            padding-top: ($avatar-size - $content-line-height) / 2;
          }
        }
      }
    }
  }
}
