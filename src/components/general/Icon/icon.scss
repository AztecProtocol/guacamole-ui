@import '../../../styles/colors';
@import '../../../styles/layout';

:global(i.cm-icon.material-icons) {
  font-family: 'Material Icons';
}

:global(.cm-icon.material-icons) {
  font-size: inherit;
  line-height: 1;
  text-align: center;
}

@each $color-name, $color in $color-map {
  .color-#{$color-name} {
    color: $color;
  }
}

@each $name, $color in $default-text-color-map {
  .color-#{$name} {
    color: $color;
  }
}

@mixin responsive-icon($suffix: '') {
  @each $key, $size in $icon-size-map {
    :global(.cm-icon) {
      &.size-#{$suffix}-#{$key} {
        width: $size;
        font-size: $size;
        line-height: $size;
      }
    }
  }
}

@include responsive-icon();

@media (min-width: $min-device-width-xs + 1) {
  @include responsive-icon('xs');
}

@media (min-width: $min-device-width-s + 1) {
  @include responsive-icon('s');
}

@media (min-width: $min-device-width-m + 1) {
  @include responsive-icon('m');
}

@media (min-width: $min-device-width-l + 1) {
  @include responsive-icon('l');
}

@media (min-width: $min-device-width-xl + 1) {
  @include responsive-icon('xl');
}

@media (min-width: $min-device-width-xxl + 1) {
  @include responsive-icon('xxl');
}

@each $deg in $icon-rotate-degrees {
  .rotate-#{$deg} {
    transform: rotate(#{$deg}deg);
  }
}

.flip-horizontal {
  transform: scaleX(-1);
}

.flip-vertical {
  transform: scaleY(-1);
}

.spin {
  animation: icon-spin 1s infinite linear;
}

@keyframes icon-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
