@import './colors';

@mixin rounded-corner($name: $default-rounded-corner-key) {
  border-radius: map-get($rounded-corner-map, $name);
}

$max-shadow-layer: 3;

@mixin shadow-layer($layer) {
    @if $layer == 1 {
        box-shadow: 0 1px 3px 0 $default-shadow-color;
    } @else if $layer == 2 {
        box-shadow: 0 2px 6px 0 $default-shadow-color, 0 2px 10px -2px $default-shadow-color;
    } @else if $layer == 3 {
        box-shadow: 0 4px 12px 0 $default-shadow-color, 0 8px 8px -4px $default-shadow-color;
    }
}

@mixin aspect-ratio($width, $height) {
  position: relative;

  &:before {
    content: "";
    display: block;
    width: 100%;
    padding-top: percentage($height / $width);
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
  }
}

@mixin named-ratio($name) {
  @if $name == square {
    @include aspect-ratio(1, 1);
  } @else if $name == classic {
    @include aspect-ratio(3, 2);
  } @else if $name == landscape {
    @include aspect-ratio(16, 9);
  } @else if $name == golden {
    @include aspect-ratio(16.18, 10);
  } @else if $name == ultra {
    @include aspect-ratio(2.76, 1);
  }
}

@function shift-size($size, $offset) {
  $index: index($size-keys, $size);
  $new-size-index: $index - $offset;
  @if $new-size-index < 1 {
    @return 'xxl';
  }
  @if $new-size-index > 7 {
    @return 'xxs';
  }
  @return nth($size-keys, $new-size-index);
}
